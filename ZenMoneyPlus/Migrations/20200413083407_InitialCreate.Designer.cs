// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZenMoneyPlus;

namespace ZenMoneyPlus.Migrations
{
    [DbContext(typeof(ZenContext))]
    [Migration("20200413083407_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("ZenMoneyPlus.Models.Setting", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("ZenMoneyPlus.Models.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<bool>("BudgetIncome")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BudgetOutcome")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Changed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Parent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Picture")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Required")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowIncome")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowOutcome")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<long>("User")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Parent");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ZenMoneyPlus.Models.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<long>("Changed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<long>("Created")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Hold")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Income")
                        .HasColumnType("TEXT");

                    b.Property<string>("IncomeAccount")
                        .HasColumnType("TEXT");

                    b.Property<string>("IncomeBankId")
                        .HasColumnType("TEXT");

                    b.Property<long>("IncomeInstrument")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("TEXT");

                    b.Property<string>("Merchant")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("OpIncome")
                        .HasColumnType("TEXT");

                    b.Property<string>("OpIncomeInstrument")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("OpOutcome")
                        .HasColumnType("TEXT");

                    b.Property<string>("OpOutcomeInstrument")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalPayee")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Outcome")
                        .HasColumnType("TEXT");

                    b.Property<string>("OutcomeAccount")
                        .HasColumnType("TEXT");

                    b.Property<string>("OutcomeBankId")
                        .HasColumnType("TEXT");

                    b.Property<long>("OutcomeInstrument")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Payee")
                        .HasColumnType("TEXT");

                    b.Property<string>("QrCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReminderMarker")
                        .HasColumnType("TEXT");

                    b.Property<long>("User")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Viewed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ZenMoneyPlus.Models.TransactionTag", b =>
                {
                    b.Property<string>("TagId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("TransactionId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("TagId", "TransactionId");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionTags");
                });

            modelBuilder.Entity("ZenMoneyPlus.Models.Tag", b =>
                {
                    b.HasOne("ZenMoneyPlus.Models.Tag", "ParentTag")
                        .WithMany("ChildrenTags")
                        .HasForeignKey("Parent");
                });

            modelBuilder.Entity("ZenMoneyPlus.Models.TransactionTag", b =>
                {
                    b.HasOne("ZenMoneyPlus.Models.Tag", "Tag")
                        .WithMany("TransactionTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZenMoneyPlus.Models.Transaction", "Transaction")
                        .WithMany("TransactionTags")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
